status table
no sensorid cmd flage

Makefile
CFLAGS=-D_REENTERANT
LDLIBS=-Ipthread

* [ 구조 복사 ]
Create Table new_table like old_table 
  특징 : 기존 테이블의 설정 그대로 복사 된다.
    참고 => 기존 테이블에 'Primary Key' 또는 'auto_increment' 가 설정 되어 있으면 복사 할 수 없음.
    응용 => Create Table IF NOT EXISTS new_table like old_table (new_table 이 없으면 복사)

* [ 구조와 데이터 복사 ]
Create Table new_table ( select * from old_table )
  특징 : 테이블의 구조와 함께 데이터도 함께 복사가 된다.
  주의 => 기존 테이블에 'Primary Key' 또는 'auto_increment' 가 설정 되어 있으면 해당 설정은 적용 되지 않고 값만 복사 됨.

* [ 데이터 복사 ]
Insert Into destination_table ( select * form source_table) 
  참고 ==> 대상 테이블의 컬럼 중에 자동 증가 값 설정 이 된 컬럼이 있을 경우 해당 컬럼에 데이터 입력시 중복된 데이터가 있으면 오류 발생.
  응용 ==> Insert Into destination_table (column_a, column_b) (select a, b from source_table) 원하는 필드의 데이터만 복사가 가능하다.

* [ 테이블 이름 변경 ]
rename table `org table name` to `new table name`;

서버요청  명령    데이터 수산       센서 결과에 대한 서버응답
센싱      )     데이터 97자리          1
로그      +     데이터 97자리          1
로그      +                         2 로그없음
로그      +                         3 SD불량
배기      ,                         2
흡기      -                         2
값설정     W                         2
흡입시간   I                         I
교정시간   P                         P
배기시간   E                         E

https://24hours-beginner.tistory.com/120

import bcrypt import mysql.connector 
# 암호화 
data = {id:'test', password: '123'} 
passwordSalt = bcrypt.gensalt() 
passwordHash = bcrypt.hashpw(data['password'], passwordSalt) 
# 에러남 TypeError: Unicode-objects must be encoded before hashing 
# bcrypt를 불러오고 password라는 변수에 str 형식의 암호화 할 대상으로 하면 에러가 난다고 한다. 
# 암호화 함수는 오직 bytes string에서만 작동한다고한다. 
# 해싱하기 전에 password를 bytes string으로 변환 필요 
# utf8 인코딩은 str 형태일 진행 
password = password.encode('utf-8') 
# 암호화 
passwordHash = bcrypt.hashpw(password, passwordSalt) 
# 실제 저장되는 값 
#decode 후 저장하지 않으면 나중에 checkpw 할때 ValueError: Invalid salt 에러가 나온다. 
insertPasswordHash = passwordHash.decode() 
# 확인 
inputPassword = '123' 
dbconn = mysql.connector.connect(**config) 
cursor = dbconn.cursor(dictionary=True) 
sql = 'select * from users where id = "test"'; 
cursor.execute(sql) 
result = cursor.fetchone() 
bcrypt.checkpw(inputPassword.encode('utf-8'), result['pw'].encode('utf-8')) 
# 결과 true false

출처: https://24hours-beginner.tistory.com/120 [365일 24시간 초보]
